package com.example.programChallenge.com.example.programChallenge.controller;

import com.example.programChallenge.com.example.programChallenge.dto.Student;
import com.example.programChallenge.com.example.programChallenge.repo.RepoInterface;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Date;


@Controller
@RequestMapping(path="/programChallenge") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RepoInterface userRepository;

    @PostMapping(path="/modify") // Map ONLY GET Requests
    public @ResponseBody String modifyStudent (@RequestParam int studentID, @RequestParam Student student )
    {
        //Student n = new Student();
        //n.setName(name);
       // n.setEmail(email);
     //   userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/find")
    public @ResponseBody Iterable<Student> getStudents(@RequestParam Date schoolYr, @RequestParam String campus,
                                                       @RequestParam String studentID, @RequestParam Date entryDate,
                                                       @RequestParam String gradeLevel, @RequestParam String name) {
        // This returns a JSON or XML with the users
        return userRepository.findStudent(schoolYr,campus, studentID,entryDate,gradeLevel,name);
    }

    @PutMapping(path="/create")
    public @ResponseBody String createNewUser (@RequestParam Student student )
    {
        userRepository.createStudent(student.getSchoolYr(), student.getCampus(), student.getStudentID(), student.getEntryDate(), student.getGradeLevel(), student.getName());
        return "Created";
    }
}
